{"ast":null,"code":"var _jsxFileName = \"/frontend/src/Alfred.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './Alfred.css'; // fullscreen-container や fullscreen-video を使い回す\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alfred = () => {\n  _s();\n  var _location$state, _location$state2, _location$state3;\n  const videoRef = useRef(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const imageSrc = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.imageSrc;\n  const label = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.label;\n  const matchedOrders = ((_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.matchedOrders) || [];\n  useEffect(() => {\n    const video = videoRef.current;\n    if (!video) return;\n    video.play();\n    video.onended = () => {\n      navigate('/fullscreen', {\n        state: {\n          imageSrc,\n          label,\n          matchedOrders\n        }\n      });\n    };\n  }, [navigate, imageSrc, label, matchedOrders]);\n  if (!imageSrc || !label) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fullscreen-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u5FC5\\u8981\\u306A\\u30C7\\u30FC\\u30BF\\u304C\\u898B\\u3064\\u304B\\u308A\\u307E\\u305B\\u3093\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fullscreen-container\",\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      src: \"/videos/Alfred.mp4\",\n      autoPlay: true,\n      muted: true,\n      playsInline: true,\n      className: \"fullscreen-video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Alfred, \"oxC/N8NkwxR2rhGg2CoHUXaTZHk=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Alfred;\nexport default Alfred;\nvar _c;\n$RefreshReg$(_c, \"Alfred\");","map":{"version":3,"names":["React","useEffect","useRef","useLocation","useNavigate","jsxDEV","_jsxDEV","Alfred","_s","_location$state","_location$state2","_location$state3","videoRef","navigate","location","imageSrc","state","label","matchedOrders","video","current","play","onended","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","autoPlay","muted","playsInline","_c","$RefreshReg$"],"sources":["/frontend/src/Alfred.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './Alfred.css'; // fullscreen-container や fullscreen-video を使い回す\n\nconst Alfred: React.FC = () => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const imageSrc = location.state?.imageSrc;\n  const label = location.state?.label;\n  const matchedOrders = location.state?.matchedOrders || [];\n\n  useEffect(() => {\n    const video = videoRef.current;\n    if (!video) return;\n\n    video.play();\n\n    video.onended = () => {\n      navigate('/fullscreen', {\n        state: {\n          imageSrc,\n          label,\n          matchedOrders,\n        },\n      });\n    };\n  }, [navigate, imageSrc, label, matchedOrders]);\n\n  if (!imageSrc || !label) {\n    return (\n      <div className=\"fullscreen-container\">\n        <div>必要なデータが見つかりません</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"fullscreen-container\">\n      <video\n        ref={videoRef}\n        src=\"/videos/Alfred.mp4\"\n        autoPlay\n        muted\n        playsInline\n        className=\"fullscreen-video\"\n      />\n    </div>\n  );\n};\n\nexport default Alfred;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAO,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,MAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,gBAAA;EAC7B,MAAMC,QAAQ,GAAGV,MAAM,CAAmB,IAAI,CAAC;EAC/C,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,QAAQ,IAAAN,eAAA,GAAGK,QAAQ,CAACE,KAAK,cAAAP,eAAA,uBAAdA,eAAA,CAAgBM,QAAQ;EACzC,MAAME,KAAK,IAAAP,gBAAA,GAAGI,QAAQ,CAACE,KAAK,cAAAN,gBAAA,uBAAdA,gBAAA,CAAgBO,KAAK;EACnC,MAAMC,aAAa,GAAG,EAAAP,gBAAA,GAAAG,QAAQ,CAACE,KAAK,cAAAL,gBAAA,uBAAdA,gBAAA,CAAgBO,aAAa,KAAI,EAAE;EAEzDjB,SAAS,CAAC,MAAM;IACd,MAAMkB,KAAK,GAAGP,QAAQ,CAACQ,OAAO;IAC9B,IAAI,CAACD,KAAK,EAAE;IAEZA,KAAK,CAACE,IAAI,CAAC,CAAC;IAEZF,KAAK,CAACG,OAAO,GAAG,MAAM;MACpBT,QAAQ,CAAC,aAAa,EAAE;QACtBG,KAAK,EAAE;UACLD,QAAQ;UACRE,KAAK;UACLC;QACF;MACF,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,EAAE,CAACL,QAAQ,EAAEE,QAAQ,EAAEE,KAAK,EAAEC,aAAa,CAAC,CAAC;EAE9C,IAAI,CAACH,QAAQ,IAAI,CAACE,KAAK,EAAE;IACvB,oBACEX,OAAA;MAAKiB,SAAS,EAAC,sBAAsB;MAAAC,QAAA,eACnClB,OAAA;QAAAkB,QAAA,EAAK;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAEV;EAEA,oBACEtB,OAAA;IAAKiB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,eACnClB,OAAA;MACEuB,GAAG,EAAEjB,QAAS;MACdkB,GAAG,EAAC,oBAAoB;MACxBC,QAAQ;MACRC,KAAK;MACLC,WAAW;MACXV,SAAS,EAAC;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpB,EAAA,CA9CID,MAAgB;EAAA,QAEHH,WAAW,EACXD,WAAW;AAAA;AAAA+B,EAAA,GAHxB3B,MAAgB;AAgDtB,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}