{"ast":null,"code":"var _jsxFileName = \"/frontend/src/Alfred.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { YOLOPredict } from './YOLOPredict';\nimport './Alfred.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alfred = () => {\n  _s();\n  var _location$state;\n  const videoRef = useRef(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const imageDataUrl = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.imageDataUrl;\n  const [result, setResult] = useState(null);\n  useEffect(() => {\n    const video = videoRef.current;\n    if (!video) return;\n    video.play();\n    video.onended = () => {\n      if (!result) {\n        alert('❌ 推論結果が取得できませんでした');\n        return;\n      }\n      navigate('/fullscreen', {\n        state: {\n          ...result\n        }\n      });\n    };\n  }, [navigate, result]);\n  useEffect(() => {\n    if (!imageDataUrl) return;\n    YOLOPredict(imageDataUrl).then(setResult).catch(err => {\n      console.error('予測失敗:', err);\n      alert('❌ 画像の予測に失敗しました');\n    });\n  }, [imageDataUrl]);\n  if (!imageDataUrl) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alfred-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u753B\\u50CF\\u304C\\u898B\\u3064\\u304B\\u308A\\u307E\\u305B\\u3093\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alfred-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alfred-frame\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alfred-message\",\n        children: \"\\u304C\\u3093\\u3070\\u308CAlfred!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        src: \"/videos/Alfred.mp4\",\n        autoPlay: true,\n        muted: true,\n        playsInline: true,\n        className: \"alfred-video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Alfred, \"N/Xs4AnnYiIPTCgP+nQVUVxzAPY=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Alfred;\nexport default Alfred;\nvar _c;\n$RefreshReg$(_c, \"Alfred\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useLocation","useNavigate","YOLOPredict","jsxDEV","_jsxDEV","Alfred","_s","_location$state","videoRef","navigate","location","imageDataUrl","state","result","setResult","video","current","play","onended","alert","then","catch","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","autoPlay","muted","playsInline","_c","$RefreshReg$"],"sources":["/frontend/src/Alfred.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { YOLOPredict } from './YOLOPredict';\nimport './Alfred.css';\n\nconst Alfred: React.FC = () => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const imageDataUrl = location.state?.imageDataUrl;\n\n  const [result, setResult] = useState<{\n    imageSrc: string;\n    label: string;\n    matchedOrders: any[];\n  } | null>(null);\n\n  useEffect(() => {\n    const video = videoRef.current;\n    if (!video) return;\n\n    video.play();\n\n    video.onended = () => {\n      if (!result) {\n        alert('❌ 推論結果が取得できませんでした');\n        return;\n      }\n      navigate('/fullscreen', {\n        state: {\n          ...result,\n        },\n      });\n    };\n  }, [navigate, result]);\n\n  useEffect(() => {\n    if (!imageDataUrl) return;\n\n    YOLOPredict(imageDataUrl)\n      .then(setResult)\n      .catch((err) => {\n        console.error('予測失敗:', err);\n        alert('❌ 画像の予測に失敗しました');\n      });\n  }, [imageDataUrl]);\n\n  if (!imageDataUrl) {\n    return (\n      <div className=\"alfred-container\">\n        <div>画像が見つかりません</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"alfred-container\">\n      <div className=\"alfred-frame\">\n        <div className=\"alfred-message\">がんばれAlfred!!</div>\n        <video\n          ref={videoRef}\n          src=\"/videos/Alfred.mp4\"\n          autoPlay\n          muted\n          playsInline\n          className=\"alfred-video\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Alfred;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,WAAW,QAAQ,eAAe;AAC3C,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,eAAA;EAC7B,MAAMC,QAAQ,GAAGV,MAAM,CAAmB,IAAI,CAAC;EAC/C,MAAMW,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,YAAY,IAAAJ,eAAA,GAAGG,QAAQ,CAACE,KAAK,cAAAL,eAAA,uBAAdA,eAAA,CAAgBI,YAAY;EAEjD,MAAM,CAACE,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAI1B,IAAI,CAAC;EAEfF,SAAS,CAAC,MAAM;IACd,MAAMkB,KAAK,GAAGP,QAAQ,CAACQ,OAAO;IAC9B,IAAI,CAACD,KAAK,EAAE;IAEZA,KAAK,CAACE,IAAI,CAAC,CAAC;IAEZF,KAAK,CAACG,OAAO,GAAG,MAAM;MACpB,IAAI,CAACL,MAAM,EAAE;QACXM,KAAK,CAAC,mBAAmB,CAAC;QAC1B;MACF;MACAV,QAAQ,CAAC,aAAa,EAAE;QACtBG,KAAK,EAAE;UACL,GAAGC;QACL;MACF,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,EAAE,CAACJ,QAAQ,EAAEI,MAAM,CAAC,CAAC;EAEtBhB,SAAS,CAAC,MAAM;IACd,IAAI,CAACc,YAAY,EAAE;IAEnBT,WAAW,CAACS,YAAY,CAAC,CACtBS,IAAI,CAACN,SAAS,CAAC,CACfO,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,KAAK,CAAC,OAAO,EAAEF,GAAG,CAAC;MAC3BH,KAAK,CAAC,gBAAgB,CAAC;IACzB,CAAC,CAAC;EACN,CAAC,EAAE,CAACR,YAAY,CAAC,CAAC;EAElB,IAAI,CAACA,YAAY,EAAE;IACjB,oBACEP,OAAA;MAAKqB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/BtB,OAAA;QAAAsB,QAAA,EAAK;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAEV;EAEA,oBACE1B,OAAA;IAAKqB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/BtB,OAAA;MAAKqB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BtB,OAAA;QAAKqB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClD1B,OAAA;QACE2B,GAAG,EAAEvB,QAAS;QACdwB,GAAG,EAAC,oBAAoB;QACxBC,QAAQ;QACRC,KAAK;QACLC,WAAW;QACXV,SAAS,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CAlEID,MAAgB;EAAA,QAEHJ,WAAW,EACXD,WAAW;AAAA;AAAAoC,EAAA,GAHxB/B,MAAgB;AAoEtB,eAAeA,MAAM;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}